# Example1 图像编辑管道说明文档

## 概述
Example1 是一个基础图像编辑管道，专注于实现基本的图像编辑功能。该管道通过训练语言风格嵌入（text embedding）和LoRA模型，生成符合用户需求的编辑图像，无需背景保留等复杂操作。

## 管道执行流程

### 步骤1：数据准备
**执行脚本：** `prepare_edit.sh`
**功能说明：** 
- 生成训练数据集的分割文件（JSONL格式）
- 提取图像的多尺度编码特征
- 为后续训练准备必要的数据结构

**关键参数：**
- 自动设置基础路径为当前example目录
- 使用预训练的VAE模型进行特征提取

### 步骤2：语言风格嵌入训练
**执行脚本：** `train_EditInfinity_example1.sh`
**功能说明：**
- 训练语言风格嵌入模型，学习文本到图像的映射关系
- 为图像编辑提供语义理解能力

**训练参数：**
- `train_textembedding=1`：启用语言风格嵌入训练
- `train_textembedding_iter=10`：训练10个迭代周期
- `use_textembedding=0`：训练阶段不使用预训练嵌入
- `train_lora=0`：此阶段不训练LoRA

### 步骤3：LoRA模型训练
**执行脚本：** `train_EditInfinity_example1.sh`
**功能说明：**
- 在已训练的语言风格嵌入基础上，训练LoRA（Low-Rank Adaptation）模型
- LoRA提供更精细的图像编辑控制能力

**训练参数：**
- `train_textembedding=0`：停止语言风格嵌入训练
- `use_textembedding=1`：使用步骤2训练的语言风格嵌入
- `use_textembedding_iter=10`：使用第10个迭代的嵌入权重
- `train_lora=1`：启用LoRA训练
- `train_lora_iter=50`：训练50个迭代周期

### 步骤4：最终图像推理
**执行脚本：** `infer_EditInfinity_example1.sh`
**功能说明：**
- 使用训练好的语言风格嵌入和LoRA模型
- 生成符合用户需求的编辑图像
- 无需背景保留等复杂操作

**推理参数：**
- `infer_function=0`：图像正常推理功能
- `use_concat_embedding=1`：使用拼接的语言风格嵌入
- `use_embedding_iter=10`：使用第10个迭代的嵌入
- `use_lora=1`：使用LoRA模型
- `use_lora_iter=50`：使用第50个迭代的LoRA权重

## 技术特点

### 基础编辑功能
- 专注于基本的图像编辑功能
- 无需复杂的背景保留操作
- 简单直接的编辑流程

### 两阶段训练策略
1. **语言风格嵌入训练**：学习文本语义到视觉特征的映射
2. **LoRA微调训练**：在嵌入基础上进行精细化调整

### 自动化程度
- 所有路径自动设置，无需手动修改
- 参数自动配置，减少人工错误
- 完整的端到端处理流程

## 输出结果
管道执行完成后，将在指定目录生成：
- 训练好的模型权重文件
- 最终编辑后的图像

## 使用说明
1. 确保所有依赖环境已正确安装
2. 将待编辑图像放置在 `image/original_image.jpg`
3. 将编辑提示词写入 `prompt/edit_image_prompt.txt`
4. 运行 `edit_pipeline.sh` 即可开始自动化处理
5. 处理完成后，结果将保存在相应的输出目录中

## 与其他例子的区别
- **Example1**：基础图像编辑，无需背景保留
- **Example2**：需要用户提供遮罩图像进行背景保留
- **Example3**：通过注意力机制自动生成遮罩图像进行背景保留